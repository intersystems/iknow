name: CI

on:
  push:
    branches-ignore:
      - 'autoupdate-*'
    paths-ignore:
      - 'demos/**'
      - 'docs/**'
      - 'language_development/**'
      - 'travis/**'
      - '.gitignore'
      - '.travis.yml'
      - 'LICENSE'
      - '**.md'
  pull_request:

env:
  ICUDIR: ${{ github.workspace }}/thirdparty/icu

jobs:
  manylinux2010_x86_64:
    runs-on: ubuntu-20.04
    steps:
      - name: check out repository
        uses: actions/checkout@v2
      - name: get list of dependencies
        run: .github/workflows/dependencies.sh
      - name: download cached ICU installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-ICU-${{ env.ICU_URL }}
          path: ${{ env.ICUDIR }}
      - name: download cached ccache and pip files
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: |
            ${{ env.ICUDIR }}
            ~/ccache
            ~/pipcache
      - name: build
        run: docker run --rm -e CCACHE_DIR=/ccache -e PIP_CACHE_DIR=/pipcache -e CCACHE_MAXSIZE=350M -e ICU_URL -e CYTHON_VERSION -v ~/ccache:/ccache -v ~/pipcache:/pipcache -v $GITHUB_WORKSPACE:/iknow quay.io/pypa/manylinux2010_x86_64:$MANYLINUX2010_X86_64_TAG /iknow/.github/workflows/build_manylinux.sh
      - name: upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/modules/iknowpy/wheelhouse/iknowpy-*.whl
  manylinux2014_aarch64:
    runs-on: ubuntu-20.04
    steps:
      - name: check out repository
        uses: actions/checkout@v2
      - name: get list of dependencies
        run: .github/workflows/dependencies.sh
      - name: download cached ICU installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-ICU-${{ env.ICU_URL }}
          path: ${{ env.ICUDIR }}
      - name: download cached ccache and pip files
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: |
            ${{ env.ICUDIR }}
            ~/ccache
            ~/pipcache
      - name: install dependencies
        run: sudo apt-get install -y qemu-user-static binfmt-support
      - name: build
        run: docker run --rm -e CCACHE_DIR=/ccache -e PIP_CACHE_DIR=/pipcache -e CCACHE_MAXSIZE=350M -e ICU_URL -e CYTHON_VERSION -v ~/ccache:/ccache -v ~/pipcache:/pipcache -v $GITHUB_WORKSPACE:/iknow quay.io/pypa/manylinux2014_aarch64:$MANYLINUX2014_AARCH64_TAG /iknow/.github/workflows/build_manylinux.sh
      - name: upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/modules/iknowpy/wheelhouse/iknowpy-*.whl
  manylinux2014_ppc64le:
    runs-on: ubuntu-20.04
    steps:
      - name: check out repository
        uses: actions/checkout@v2
      - name: get list of dependencies
        run: .github/workflows/dependencies.sh
      - name: download cached ICU installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-ICU-${{ env.ICU_URL }}
          path: ${{ env.ICUDIR }}
      - name: download cached ccache and pip files
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: |
            ${{ env.ICUDIR }}
            ~/ccache
            ~/pipcache
      - name: install dependencies
        run: sudo apt-get install -y qemu-user-static binfmt-support
      - name: build
        run: docker run --rm -e CCACHE_DIR=/ccache -e PIP_CACHE_DIR=/pipcache -e CCACHE_MAXSIZE=350M -e ICU_URL -e CYTHON_VERSION -v ~/ccache:/ccache -v ~/pipcache:/pipcache -v $GITHUB_WORKSPACE:/iknow quay.io/pypa/manylinux2014_ppc64le:$MANYLINUX2014_PPC64LE_TAG /iknow/.github/workflows/build_manylinux.sh
      - name: upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/modules/iknowpy/wheelhouse/iknowpy-*.whl
  macosx_10_9_x86_64:
    runs-on: macos-10.15
    steps:
      - name: check out repository
        uses: actions/checkout@v2
      - name: set up environment
        run: |
          echo "HOMEBREW_NO_AUTO_UPDATE=1" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=10.9" >> $GITHUB_ENV
          mkdir -p $HOME/cache
          echo "CCACHE_DIR=$HOME/ccache" >> $GITHUB_ENV
          echo "CCACHE_MAXSIZE=400M" >> $GITHUB_ENV
          mkdir -p $HOME/pipcache
          echo "PIP_CACHE_DIR=$HOME/pipcache" >> $GITHUB_ENV
          echo "PYINSTALL_DIR=$HOME/.pyenv/versions" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          echo /usr/local/opt/ccache/libexec >> $GITHUB_PATH
      - name: get list of dependencies
        run: .github/workflows/dependencies.sh
      - name: download cached ICU installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-ICU-${{ env.ICU_URL }}
          path: ${{ env.ICUDIR }}
      - name: download cached ccache files, pip files, Python installations
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: |
            ${{ env.CCACHE_DIR }}
            ${{ env.PIP_CACHE_DIR }}
            ${{ env.PYINSTALL_DIR }}
      - name: install dependencies
        run: .github/workflows/install_osx.sh
      - name: build
        run: .github/workflows/build_osx.sh
      - name: upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/modules/iknowpy/dist/merged/iknowpy-*.whl
  windows_x86_64:
    runs-on: windows-2019
    defaults:
      run:
        shell: bash
    steps:
      - name: check out repository
        uses: actions/checkout@v2
      - name: set up environment
        run: |
          mkdir -p $HOME/buildcache_exe
          echo "BUILDCACHE_EXE_DIR=$HOME/buildcache_exe" >> $GITHUB_ENV
          mkdir -p $HOME/buildcache
          echo "BUILDCACHE_DIR=$HOME/buildcache" >> $GITHUB_ENV
          echo "BUILDCACHE_MAX_CACHE_SIZE=2147483648" >> $GITHUB_ENV
          mkdir -p $HOME/pipcache
          echo "PIP_CACHE_DIR=$HOME/pipcache" >> $GITHUB_ENV
          mkdir -p $HOME/python
          echo "PYINSTALL_DIR=$HOME/python" >> $GITHUB_ENV
      - name: get list of dependencies
        run: .github/workflows/dependencies.sh
      - name: download cached ICU installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-ICU-${{ env.ICU_URL }}
          path: ${{ env.ICUDIR }}
      - name: download cached buildcache installation
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-buildcache-${{ env.BUILDCACHE_URL }}
          path: ~/buildcache_exe
      - name: download cached buildcache files, pip files, Python installations
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: |
            ~/buildcache
            ~/pipcache
            ~/python
      - name: install dependencies
        run: .github/workflows/install_windows.sh
      - name: build
        run: .github/workflows/build_windows.sh
      - name: upload wheel artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}
          path: ${{ github.workspace }}/modules/iknowpy/dist/merged/iknowpy-*.whl

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [manylinux2010_x86_64, manylinux2014_aarch64, manylinux2014_ppc64le, macosx_10_9_x86_64, windows_x86_64]
    runs-on: ubuntu-20.04
    env:
      PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      TESTPYPI_TOKEN: ${{ secrets.TESTPYPI_TOKEN }}
    steps:
      - name: check out repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: download cached pip files
        uses: actions/cache@v2
        with:
          key: ${{ github.job }}-run-${{ github.run_number }}
          restore-keys: ${{ github.job }}-run-
          path: ~/.cache/pip
      - uses: actions/download-artifact@v2
        with:
          path: ~/wheels
      - name: deploy if appropriate
        run: .github/workflows/deploy.sh
